pipeline{
    agent any
    environment{
        IMAGE_NAME = "pythonfastapi"
        TAG = "${BUILD_ID}"
        REPO = "murali90102"
        
        KUBECONFIG_FILE = "/var/lib/jenkins/k8-data/config"
    }
    stages{
        stage("Git-Checkout"){
            steps{
                git branch: 'main', url: 'https://github.com/Murali90102/python_api_sample.git'
            }
        }
        stage("Docker_Image_Build"){
            steps{
                sh 'docker ps'
                sh "docker build -t ${REPO}/${IMAGE_NAME}:${TAG} ."
            }
        }
        stage("Docker_Image_Push"){
            steps{
                sh 'docker ps'
                withCredentials([usernamePassword(credentialsId: 'DOCKER_CREDS', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USER')]) {
                    sh "docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}"
                    sh "docker push ${REPO}/${IMAGE_NAME}:${TAG}"

                    // Clean Up
                    sh "docker rmi -f ${REPO}/${IMAGE_NAME}:${TAG}"
                    sh "docker system prune -f"
                }
            }
        }
        stage("K8-Deployment"){
            steps{
                sh "sed -i \"s#murali90102/pythonfastapi:1#${REPO}/${IMAGE_NAME}:${TAG}#1\" k8-deployment/deployment.yaml"
                sh "kubectl --kubeconfig ${KUBECONFIG_FILE} apply -f k8-deployment/deployment.yaml"
                sh "curl \$(kubectl --kubeconfig ${KUBECONFIG_FILE} get ingress pythonfastapi-ingress -o jsonpath='{.status.loadBalancer.ingress[].ip}')"
            }
        }
    }
}